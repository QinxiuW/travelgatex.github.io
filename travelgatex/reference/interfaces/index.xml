<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Interfaces on TravelgateX Documentation</title>
    <link>/travelgatex/reference/interfaces/</link>
    <description>Recent content in Interfaces on TravelgateX Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/travelgatex/reference/interfaces/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>BookableOptionSearch</title>
      <link>/travelgatex/reference/interfaces/bookableoptionsearch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/reference/interfaces/bookableoptionsearch/</guid>
      <description>GraphQL schema definition interface BookableOptionSearch {  supplierCode: String!    accessCode: String!    id: String!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields supplierCode(String!): Supplier that offers this option.  accessCode(String!): Access code of this option.  id(String!): Indicates the id to be used on Quote as key</description>
    </item>
    
    <item>
      <title>GroupCommonData</title>
      <link>/travelgatex/reference/interfaces/groupcommondata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/reference/interfaces/groupcommondata/</guid>
      <description>GraphQL schema definition interface GroupCommonData {  id: ID!    code: ID!    label: String    type: GroupType!    info: String    children(    codes: [ID!],     first: Int,     last: Int,     before: String,     after: String,     ): GroupConnection    owner: Member    isEditable: Boolean!</description>
    </item>
    
    <item>
      <title>Node</title>
      <link>/travelgatex/reference/interfaces/node/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/reference/interfaces/node/</guid>
      <description>GraphQL schema definition interface Node {  code: ID!    createdAt: DateTime!    updatedAt: DateTime!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields code(ID!): ID code  createdAt(DateTime!): Date created  updatedAt(DateTime!): Date updated</description>
    </item>
    
    <item>
      <title>Priceable</title>
      <link>/travelgatex/reference/interfaces/priceable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/reference/interfaces/priceable/</guid>
      <description>GraphQL schema definition interface Priceable {  currency: Currency!    binding: Boolean!    net: Float!    gross: Float    exchange: Exchange!   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields currency(Currency!): Specifies the currency.  binding(Boolean!</description>
    </item>
    
    <item>
      <title>Response</title>
      <link>/travelgatex/reference/interfaces/response/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/reference/interfaces/response/</guid>
      <description>GraphQL schema definition interface Response {  stats( token: String!, ): StatsRequest    auditData: AuditData    errors: [Error!]    warnings: [Warning!]   Show deprecated fields   }    window.onload = _ = { const deprecatedContainer = document.querySelectorAll(&#39;div.deprecated-entities-container&#39;)[0]; if (deprecatedContainer.children.length) { const list = document.querySelectorAll(&#39;li.deprecated-button-container&#39;)[0]; list.style.display = &#39;block&#39;; console.log(list.style); } }  Fields stats(StatsRequest): Application stats  auditData(AuditData): Data sent and received in the supplierâ€™s original format.</description>
    </item>
    
  </channel>
</rss>