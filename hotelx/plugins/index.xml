<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Plugins on TravelgateX Documentation</title>
    <link>/hotelx/plugins/</link>
    <description>Recent content in Plugins on TravelgateX Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/hotelx/plugins/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Overview</title>
      <link>/hotelx/plugins/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/overview/</guid>
      <description>Introduction Plugins are custom code, executed in HotelX servers, that add or modify specific functionalities. Any Partner can develop custom Plugins, nevertheless HotelX, HotelX has developed many Plugins available for anyone to use out of the box.
Flows HotelX query or mutation determine what flow is executed. Plugins can be executed in different Queries or Mutations:
 Search Quote Book Cancel  Steps Step is the minium container where plugins are executed sequentially.</description>
    </item>
    
    <item>
      <title>Blacklist</title>
      <link>/hotelx/plugins/black-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/black-list/</guid>
      <description>The blacklist plugin is used to ignore hotel code(s) when we a search query is executed. There are 2 types of blacklists:
 Filter hotel code of a specific Access Filter hotel codes of a specific Supplier  Loading a blacklist is as easy as following the steps below:
Access Blacklist Blacklist is applied for specific Access
File Format The file should be in the below format:
 Encoding: UTF-8</description>
    </item>
    
    <item>
      <title>Mapping</title>
      <link>/hotelx/plugins/mapping/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/mapping/</guid>
      <description>The map plugins are used to change the supplier codes to client codes or vice versa. There are four types:
 Hotel map  Board Map  Room Map  Rate Map   Our map formats share a common structure. In order to load your maps you just need to follow the instructions below:
Example files You can download example for the files structure here
Entity Maps File Format The file should be in the following format:</description>
    </item>
    
    <item>
      <title>Aggregation</title>
      <link>/hotelx/plugins/aggregation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/aggregation/</guid>
      <description>Aggregation plugins extends HotelX allowing filtering Supplier options and responses using different business rules.
KeyFilter Filters Supplier options based on field keys applying a selector function over field values.
It&amp;rsquo;s based on SQL Aggregate Functions but filtering, not aggregating.
 Field Keys as a combination of:  SupplierCode  HotelCode BoardCode RoomCode Refundable Market PaymentType Promotion Supplement Surcharges Rate rules    Parameters    key value type condition description     primaryKey string mandatory It is the criteria used to aggregate, the value is a set of criteria separated by commas, the possible values are:</description>
    </item>
    
    <item>
      <title>Commission</title>
      <link>/hotelx/plugins/net-price/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/net-price/</guid>
      <description>CommissionX is a plugin that defines the contracted / expected commission in cases where the supplier is not able to send it via integration.
 CommissionX (NetpriceX Extended funcionality)  CommissionX Goals CommissionX is a plugin that defines the contracted / expected commission in cases where the supplier is not able to send it via integration. These commissions are defined through the plugin so as not to lose the options in which we do not know the type of price sent, since this information is established at contract level between client-supplier.</description>
    </item>
    
    <item>
      <title>Markup</title>
      <link>/hotelx/plugins/markup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/markup/</guid>
      <description>Markups type plugins permits to apply markup percentages over a price, markup is a field in price composed of a set of rules and a new price with an added percentage, the percentage is the sum of every rule applied.
Although this plugin can be customized, we already offer an implementation.
MarkupX This markup implementation is supported by our web application which permits the management of an organization&amp;rsquo;s rules, the modification of these rules are applied in your product at real time.</description>
    </item>
    
    <item>
      <title>Preference</title>
      <link>/hotelx/plugins/preference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/preference/</guid>
      <description>Preference is an optional plugin and allows to offer options preferentially in relation to the rules informed by the client.
Preference Goals The preference plugin Gives preference to the options that match the preference rules By doing this, the options will be returned in a preferential way.
Sequentially, the rules will be evaluated until a match is found, upon finding it, the process will be stopped and the preference will be evaluated.</description>
    </item>
    
    <item>
      <title>Safety Margin</title>
      <link>/hotelx/plugins/safety_margin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/safety_margin/</guid>
      <description>Safety Margin is an optional plugin that allows discarding options that have a commission lower than expected. The expected commission has to be loaded in safety-margin file, and is the commission over gross, in other words, the commission/profit is already included in the price.
Safety Margin Goals The safety margin plugin discards those options that have a commission lower than expected. By doing this, only options that have a commission over gross, equal or lower than those reported in the file will be returned.</description>
    </item>
    
    <item>
      <title>Currency Converter</title>
      <link>/hotelx/plugins/converter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/converter/</guid>
      <description>Currency converter is an optional plugin and allows to apply currency conversion over all the prices in one Option.
CurrencyX This plugin receives an Option and a currency and returns the same option with currency conversion applied over all the prices. It reads the information about rates from a file located in our ftp. Is mandatory that this file exists in the ftp and satisfies all the requirements below. Otherwise, an error will be returned.</description>
    </item>
    
    <item>
      <title>Processor</title>
      <link>/hotelx/plugins/processor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/processor/</guid>
      <description>Processor plugins extends HotelX allowing multiple operation types. It can modify request and response messages, allowing a full range of operations:
 Split arrays Join arrays Modify object values Add or remove object instances  </description>
    </item>
    
    <item>
      <title>Search by destination</title>
      <link>/hotelx/plugins/search_by_destination/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/search_by_destination/</guid>
      <description>const apiKeyJO = &#34;q8ggxpoVDW76Kw918hwnnRvxlZmAP2QZ&#34;; const apiKeyDC = &#34;64780338-49c8-4439-7c7d-d03c2033b145&#34;; $(document).ready(main); function main() { const q = &#39;[{\x22apikey\x22:\x2264780338-49c8-4439-7c7d-d03c2033b145\x22,\x22gist\x22:\x22https:\/\/gist.githubusercontent.com\/tgx-bot\/74a01699ccc7f7a8f043f6583e64fcde\/raw\x22,\x22divname\x22:\x22div_admin_destinations\x22},{\x22apikey\x22:\x2264780338-49c8-4439-7c7d-d03c2033b145\x22,\x22gist\x22:\x22https:\/\/gist.githubusercontent.com\/tgx-bot\/f820c0508f7d47432eaad34823d426e0\/raw\x22,\x22divname\x22:\x22div_searchbydestinations\x22}]&#39;; const queries = JSON.parse(q); for (const q of queries) { iterateQueries(q) } } function iterateQueries(q) { if(!q.gist.includes(&#39;http&#39;)) return; $.get(q.gist, function (data) { q.data = data; renderGist(q); }); } function renderGist(q) { var fetchURL = &#39;https://api.travelgatex.com&#39;; var search = window.location.search; var parameters = {}; search.substr(1).split(&#39;&amp;&#39;).forEach(function (entry) { var eq = entry.indexOf(&#39;=&#39;); if (eq = 0) { parameters[decodeURIComponent(entry.</description>
    </item>
    
    <item>
      <title>Development</title>
      <link>/hotelx/plugins/development/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/development/</guid>
      <description>On this page you will learn how to develop your own HotelX Plugin.</description>
    </item>
    
    <item>
      <title>Entities</title>
      <link>/hotelx/plugins/entity_table_file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/entity_table_file/</guid>
      <description>Entities processed types: Sequential Type of processing sequentially, the first rule that coincides will be the one applied.
Supplier Rules applied or indexed at the supplier level.
Access Rules applied or indexed at the access level.
Hotel The key to indexing is of the hotel type, we hope that the reference is by a hotel code where the type will be given by the context.
Destination Idem hotel.</description>
    </item>
    
  </channel>
</rss>