<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HotelX on TravelgateX Documentation</title>
    <link>/hotelx/</link>
    <description>Recent content in HotelX on TravelgateX Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/hotelx/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Overview</title>
      <link>/hotelx/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/overview/</guid>
      <description>The HotelX API is a powerful accomodation aggregation solution that will speed up your travel websites and apps and expand your catalogue of hotel booking services.
Using HotelX, you can improve your hotel search response times and their accuracy by customizing aggregated responses based on your preferred criteria.
The below map shows our architecture and the average impact on response rates caused by each layer.
  Each and every layer described in the this figure is explained as follows:</description>
    </item>
    
    <item>
      <title>Quickstart</title>
      <link>/hotelx/quickstart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/quickstart/</guid>
      <description>{{&amp;lt; graphiql-script queries=&amp;rdquo;[{\&amp;ldquo;apikey\&amp;rdquo;:\&amp;ldquo;64780338-49c8-4439-7c7d-d03c2033b145\&amp;ldquo;,\&amp;ldquo;gist\&amp;rdquo;:\&amp;ldquo;https://gist.githubusercontent.com/tgx-bot/6972ecae51e849fe8c49305bf0032dfe/raw&amp;quot;,&amp;quot;divname&amp;quot;:&amp;quot;div_authorization&amp;quot;},{&amp;quot;apikey&amp;quot;:&amp;quot;64780338-49c8-4439-7c7d-d03c2033b145&amp;quot;,&amp;quot;gist&amp;quot;:&amp;quot;https://gist.githubusercontent.com/alexjmoya/b5dff8d1ec9c6f61dc0392a20558be67/raw&amp;quot;,&amp;quot;divname&amp;quot;:&amp;quot;div_search&amp;quot;},{&amp;quot;apikey&amp;quot;:&amp;quot;64780338-49c8-4439-7c7d-d03c2033b145&amp;quot;,&amp;quot;gist&amp;quot;:&amp;quot;https://gist.githubusercontent.com/alexjmoya/f6d343260df0e75ab636779c2e00db39/raw&amp;quot;,&amp;quot;divname&amp;quot;:&amp;quot;div_quote&amp;quot;},{&amp;quot;apikey&amp;quot;:&amp;quot;64780338-49c8-4439-7c7d-d03c2033b145&amp;quot;,&amp;quot;gist&amp;quot;:&amp;quot;https://gist.githubusercontent.com/alexjmoya/64dfb6604667ee86399b7857708830e9/raw&amp;quot;,&amp;quot;divname&amp;quot;:&amp;quot;div_book&amp;quot;}, {\&amp;ldquo;apikey\&amp;rdquo;:\&amp;ldquo;64780338-49c8-4439-7c7d-d03c2033b145\&amp;ldquo;,\&amp;ldquo;gist\&amp;rdquo;:\&amp;ldquo;https://gist.githubusercontent.com/alexjmoya/f2933df3054688d8a3551ca3cb16bf90/raw&amp;quot;,&amp;quot;divname&amp;quot;:&amp;quot;div_cancel&amp;quot;},{&amp;quot;apikey&amp;quot;:&amp;quot;64780338-49c8-4439-7c7d-d03c2033b145&amp;quot;,&amp;quot;gist&amp;quot;:&amp;quot;https://gist.githubusercontent.com/alexjmoya/78fcc6ec8ba6c7535d39f687aa0e714d/raw&amp;quot;,&amp;quot;divname&amp;quot;:&amp;quot;div_bookinglist&amp;quot;}]&amp;quot; &amp;gt;}} {{&amp;lt; graphiql-styles &amp;gt;}}
In this section you will find all the necessary queries in order to perform a booking flow using GraphQL Playground.
Step by Step In order to perform a booking flow, please follow the steps below:
Authorization First of all, to be able to run any query you should have an Apikey as an authentication.
In case you have an Apikey, you can use it by introducing it in the HTTP Headers.</description>
    </item>
    
    <item>
      <title>Check configuration</title>
      <link>/hotelx/checkconfig/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/checkconfig/</guid>
      <description>This query allows you to retrieve relevant information like supplier access code (link a lo que es el access), supplier name, supplier configuration, supplier context, type of connection: test or live; active or not. You can then use this information to perform other queries/mutations.
To run this query, you should send within the headers your Apikey
{ admin{ accesses{ edges{ node{ accessData{ name isActive code supplier{ supplierData{ code name isActive provider{ code name isActive isPublic } context } } isTest user password parameters{ key value } } } } } } }  </description>
    </item>
    
  </channel>
</rss>