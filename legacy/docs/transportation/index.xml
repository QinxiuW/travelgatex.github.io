<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Transportation API Documentation on TravelgateX Documentation</title>
    <link>/legacy/docs/transportation/</link>
    <description>Recent content in Transportation API Documentation on TravelgateX Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/legacy/docs/transportation/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Avail</title>
      <link>/legacy/docs/transportation/dsf/flights/avail/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/legacy/docs/transportation/dsf/flights/avail/</guid>
      <description>Method Goals This method aims to return all the available options for a given date and itinerary. It does not filter different classes, times or fares. It will always return all of the results returned by the provider.
Request Format The common part of an availability request is very straight forward. It only requires the destination/s, the travelling dates, the paxes and the indication of the trip type.
Response Format The response format will always be delivered in the node Transportation, which will be organized by two main nodes:</description>
    </item>
    
    <item>
      <title>Availability</title>
      <link>/legacy/docs/transportation/dsf/ferries/avail/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/legacy/docs/transportation/dsf/ferries/avail/</guid>
      <description>Method Goals This method aims to complete the common side of the petition with the ferries specifications, if any, and therefore have the complete petition for ferries.
Request Format The request needs a list of journeys (each one with the desired dates and ports), a list of the passengers and an optional vehicle list.
Response Format The response contains a list of fares with the available options.
AvailabilityRQ &amp;lt;AvailabilityRQ xmlns:xsd = &amp;quot;http://www.</description>
    </item>
    
    <item>
      <title>Cancellation</title>
      <link>/legacy/docs/transportation/dsf/ferries/cancel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/legacy/docs/transportation/dsf/ferries/cancel/</guid>
      <description>Method Goals This method aims to cancel a booking.
Request Format The request requires the booking code or locator.
Response Format If the provider returns a Breakdown, this will be informed in CancellarionRS.
CancellationRQ Example &amp;lt;CancellationRQ&amp;gt; &amp;lt;Locator&amp;gt;XXX&amp;lt;/Locator&amp;gt; &amp;lt;CancellationCosts&amp;gt;0&amp;lt;/CancellationCosts&amp;gt; &amp;lt;/CancellationRQ&amp;gt;  CancellationRQ Description    Element Number Type Description     CancellationRQ 1  Root node.   Locator 1  Contains a list of Tickets.   CancellationCosts 1  Contains details of the Ticket.</description>
    </item>
    
    <item>
      <title>Cancellation</title>
      <link>/legacy/docs/transportation/dsf/flights/cancel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/legacy/docs/transportation/dsf/flights/cancel/</guid>
      <description>Method Goals This method aims to cancel a booking.
Request Format The request requires the booking code or locator.
Response Format The result returns empty response
Remarks Not implemented by all suppliers
CancellationRQ Description    Element Number Type Description     CancellationRQ 1  Root node.   Locator 1 String Contains the booking&amp;rsquo;s locator that want to be cancelled   CancellationCosts 0..1 Decimal Contains the amount of cancellation costs.</description>
    </item>
    
    <item>
      <title>Change Log</title>
      <link>/legacy/docs/transportation/change-log/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/legacy/docs/transportation/change-log/</guid>
      <description>Version 1.0.8: Date 24/07/2012
: Added ConfigCompaniasDispo in the common RQ objects.
|
Version 1.0.9: Date 30/08/2012
: Added Baggage List to Passenger in ResevaRQ.
: Added baggage type in SuplementosRS.
: Added special supplement in SuplementosRS.
|
Version 1.0.11: Date 09/01/2013
: Added Generic Error Code.
|
Version 1.0.12: Date 30/03/2013
: Added list of Locators to RespuestaRecuperarReserva and RespuestaRecuperarListaReserva.
: Added some types to tiposImporteCargo.
: Added number of stops in DisponibilidadRS.</description>
    </item>
    
    <item>
      <title>Common Elements</title>
      <link>/legacy/docs/transportation/dsf/ferries/common-elements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/legacy/docs/transportation/dsf/ferries/common-elements/</guid>
      <description>Introduction In every petition there some nodes which will always appear, there for this chapter is dedicated for said nodes.
Request Format The common elements in all of the petitions are: source of the petition, Timeout, the indication if you wish to register the transactions and the provider configuration.
Response Format The response will contain the indication if the function is implemented or not, application errors, if any, the providers traces if requested and the response status.</description>
    </item>
    
    <item>
      <title>Common Elements</title>
      <link>/legacy/docs/transportation/common-elements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/legacy/docs/transportation/common-elements/</guid>
      <description>Introduction In every petition there some nodes which will always appear, there for this chapter is dedicated for said nodes.
Request Format The common elements in all of the petitions are: source of the petition, Timeout, the indication if you wish to register the transactions and the provider configuration.
Response Format The response will contain the indication if the function is implemented or not, application errors, if any, the providers traces if requested and the response status.</description>
    </item>
    
    <item>
      <title>Emit</title>
      <link>/legacy/docs/transportation/dsf/flights/emit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/legacy/docs/transportation/dsf/flights/emit/</guid>
      <description>Method Goals This method aims to issue the tickets.
Request Format The request indicate the booking locator and the issue type (which tickets have to be issued: all, only passengers, only extras).
Response Format The result returns a list of Locators (booking codes). It can be the supplier&amp;rsquo;s or the one sent in the request. It also returns all the charges associated to the booking, the passengers and the tickets issued (if any).</description>
    </item>
    
    <item>
      <title>Enum</title>
      <link>/legacy/docs/transportation/enum/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/legacy/docs/transportation/enum/</guid>
      <description>Enumerate description Resident discount type    Possible Values Description     N None   BP Balearic Islands resident flying to mainland   BI Balearic Islands resident flying to another balearic island   DC Canarian Islands resident flying to another Canarian Island   RC Canarian Islands resident flying to mainland   RM Ceuta/Melilla resident   STR Italian resident discount   ELB Italian resident Elba   SDG Italian resident Sardegna   SLC Italian resident Sicily   RE Ceuta    Charge type    Possible Values Description     TAX Tax   CARD Card   BAGGAGE Baggage   CHECKIN Checkin   CARRIER_CHARGES Carrier charges   DU_TAX DU Taxes   BASE_AMOUNT Base import   DISCOUNT Discount   VEHICLE Vehicle   BANKING_CHARGES Bank charges   CURRENCY_CONVERSION_CHARGES Currency conversion charges   VEHICLE_FEE Vehicle fee   FEE Fee   SEAT Seat   SUPPLEMENT Supplement   TRAVELCARD Travel card   PET Pet   PET_FEE Pet fee   INSURANCE Insurance   FAST_TRACK Fast Track   PRIORITY_BOARDING Priority Boarding   BLOCK_FARE Fare lock   SPECIAL_ASSISTANCE Special assistance   PENALTY Penalty    Block Attribute Type    Possible Values Description     OVER_WING Over wing seat   MIDDLE Middle seat   AISLE Aisle seat   WINDOW Window seat   COMPARTMENT Compartment   LAVATORY Lavatory   LUGGAGE Luggage seat   PHONE Phone seat   POWER Power   TABLE Table   EXITROW Emergency exit   FEETBLOCKED Feet blocked seat   NO_CHILD No childs allowed seat   NO_INFANT No infants allowed seat   XL_SEAT XL seat   RESTRICTED Seat with some kind of restriction   HANDICAP Special seat for handicap people   QUIET Quiet seat   GROUPS Groups seat   NO_PET No pets allowed seat   BULKHEAD Bulk head seat   BLOCKED Blocked seat   UNKNOWN Unknown characterstic   LAST_OFF Last off    Refund type    Possible Values Description     ALL Fare and taxes will be refunded   FARE Only fare will be refunded   TAXES Only taxes will be refunded   AUTO GDS automatic ticket change   PARTIAL Partial refund.</description>
    </item>
    
    <item>
      <title>Errors</title>
      <link>/legacy/docs/transportation/error/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/legacy/docs/transportation/error/</guid>
      <description>Error description    Possible Values Description     102 Supplier Error.   103 Duplicate Booking.   104 Supplier connection error.   105 Generic communication error.   188 Availability product not found.   191 Unknown error or Integration/Application error.   210 Payment card error.   211 Passenger error.   212 Delta price error.   345 Connection timeout.   346 Operation not implemented.</description>
    </item>
    
    <item>
      <title>Ferries Data Structure</title>
      <link>/legacy/docs/transportation/ferries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/legacy/docs/transportation/ferries/</guid>
      <description>The structure of the API specification follows a standard. This document intends to explain every aspect of this structure and their fields.
The integration will have the following methods:
   Method Input Output Required Description     Avail AvailabilityRQ AvailabilityRS Yes Makes a availability call   Valuation ValuationRQ ValuationRS Yes Makes a pre-booking   Reservation ReservationRQ ReservationRS Yes Makes a booking   Routes RoutesRQ RoutesRS Yes Gets a static routes list   RetrieveReservation RetrieveReservation RQ RetrieveReservation RS No Gets the details of a single booking   RetrieveReservation List RetrieveReservation ListRQ RetrieveReservation ListRS No Gets a list of bookings   Cancelation CancellationRQ CancellationRS No Cancels a booking    Each request sent to the service url requires a node called rqXML .</description>
    </item>
    
    <item>
      <title>Flights Data Structure</title>
      <link>/legacy/docs/transportation/flights/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/legacy/docs/transportation/flights/</guid>
      <description>API Structure The structure of the API specification follows a standard. This document intends to explain every aspect of this structure and their fields.
The integration will have the following methods:
   Element Input Output Required Description     Availability AvailabilityRQ AvailabilityRS Yes Return all the available options for a given date and itinerary. It does not filter different classes, times or fares. It will always return all of the results returned by the provider.</description>
    </item>
    
    <item>
      <title>Refund</title>
      <link>/legacy/docs/transportation/dsf/flights/refund/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/legacy/docs/transportation/dsf/flights/refund/</guid>
      <description>Method Goals This method aims to refund tickets issued previously.
Request Format The request must indicate the tickets to be refunded, the refund operation desired (informative or process) and the refund type (fare, taxes, etc.).
Response Format The result returns a breakdown with all the amounts of the fare that will be refunded (Info) or that has been refunded (Process). The result returns also the tickets refunded (same ones of the request, only with the status updated), and it may return also a list of booking locators.</description>
    </item>
    
    <item>
      <title>Reservation</title>
      <link>/legacy/docs/transportation/dsf/ferries/reservation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/legacy/docs/transportation/dsf/ferries/reservation/</guid>
      <description>Method Goals This method aims to book one or more itineraries.
Request Format The request format works the same way as the Valuation request. It can work with one Itinerary or with two.
This request also holds the passengers and payment data.
Response Format The result returns a list of Locator (booking codes). It can be the supplier&amp;rsquo;s or the one sent in the request. It also returns all the charges associated to the booking.</description>
    </item>
    
    <item>
      <title>Reservation</title>
      <link>/legacy/docs/transportation/dsf/flights/reservation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/legacy/docs/transportation/dsf/flights/reservation/</guid>
      <description>Method Goals This method aims to book one or more Itineraries.
Request Format The request format works the same way as the Valuation request. It can work with one or with two Itineraries. The request will also contain a list of Passengers and the PaymentInfo, such as payment method.
Response Format The result returns a list of Locators (booking codes). It can be the supplier&amp;rsquo;s or the one sent in the request.</description>
    </item>
    
    <item>
      <title>RetrieveReservation</title>
      <link>/legacy/docs/transportation/dsf/ferries/retrievereservation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/legacy/docs/transportation/dsf/ferries/retrievereservation/</guid>
      <description>Method Goals This method aims to retrieve a booking with its full details.
Request Format The request requires the booking code or locator.
Response Format The response contains the details of a booking.
RetrieveReservationRQ Example &amp;lt;RetrieveReservationRQ xmlns:xsd = &amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot; xmlns:xsi = &amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;&amp;gt; &amp;lt;Configuration/&amp;gt; &amp;lt;ClientConfiguration/&amp;gt; &amp;lt;Locator&amp;gt;BFRFKVM&amp;lt;/Locator&amp;gt; &amp;lt;/RetrieveReservationRQ&amp;gt;  RetrieveReservationRQ Description    Element Number Type Description     RetrieveReservationRQ 1  Root node.   Locator 1 String Locator.</description>
    </item>
    
    <item>
      <title>RetrieveReservation</title>
      <link>/legacy/docs/transportation/dsf/flights/recover-reserve/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/legacy/docs/transportation/dsf/flights/recover-reserve/</guid>
      <description>Method Goals This method aims to retrieve a booking with its full details.
Request Format The booking can be retrieved by several methods, such as the locator of the booking, the email associated to it, passenger name/surname or other information relative to the itinerary itself.
Response Format The result returns a list of Itineraries, Passengers, Segments and Booking Locators. It may return also the Payment Info of the booking and the information the client had provided to the provider, such as direction, phone number, etc.</description>
    </item>
    
    <item>
      <title>RetrieveReservationList</title>
      <link>/legacy/docs/transportation/dsf/ferries/retrievereservationlist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/legacy/docs/transportation/dsf/ferries/retrievereservationlist/</guid>
      <description>Method Goals This method aims to return a list of bookings for a given time period being that either booking date or the travelling date.
Request Format The request requires a date (of reservation or departure) and all the bookings that match this date will be returned.
Response Format The response contains a list of bookings that match the requested date.
RetrieveReservationListRQ Example &amp;lt;RetrieveReservationListRQ&amp;gt; &amp;lt;Configuration/&amp;gt; &amp;lt;ClientConfiguration currencyCode = &amp;quot;EUR&amp;quot;/&amp;gt; &amp;lt;ReservationDate&amp;gt;2014-03-04T00:00:00&amp;lt;/ReservationDate&amp;gt; &amp;lt;DepartureDate&amp;gt;2010-09-09T00:00:00&amp;lt;/DepartureDate&amp;gt; &amp;lt;ClientEmail&amp;gt;client@clientmail.</description>
    </item>
    
    <item>
      <title>RetrieveReservationList</title>
      <link>/legacy/docs/transportation/dsf/flights/recover-reserve-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/legacy/docs/transportation/dsf/flights/recover-reserve-list/</guid>
      <description>Method Goals This method aims to return a list of bookings for a given time period being that either booking date or the travelling date, among other filters available.
Request Format The filter can be set between two time periods, search by email, origin, destination, agency, passenger name/surname, etc.
Response Format The result return a briefing of the basic information of the bookings that match the query&amp;rsquo;s filters.
Remarks Not implemented by all suppliers</description>
    </item>
    
    <item>
      <title>Routes</title>
      <link>/legacy/docs/transportation/dsf/ferries/routes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/legacy/docs/transportation/dsf/ferries/routes/</guid>
      <description>Method Goals This method aims to return all the available routes for the selected carrier.
Request Format This request does not require any parameters.
Response Format The result returns a list of Route with the corresponding time frame in which this route is valid.
Remarks This method should be cached internally and only called once a week and in most cases once a month.
RoutesRQ Example &amp;lt;RoutesRQ&amp;gt; &amp;lt;/RoutesRQ&amp;gt;  RoutesRQ Description    Element Number Type Description     RoutesRQ 1  Root node.</description>
    </item>
    
    <item>
      <title>Routes</title>
      <link>/legacy/docs/transportation/dsf/flights/routes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/legacy/docs/transportation/dsf/flights/routes/</guid>
      <description>Method Goals This method aims to get the availability of routes of a supplier.
Request Format In the request, it can be set an origin location, so the response would include only the routes which start with this origin, and an airline filtering.
Response Format The result returns a list of locations and for each one, a destination tree.
Remarks Not implemented by all suppliers. Some suppliers will return dates information for each destination tree.</description>
    </item>
    
    <item>
      <title>Supplements</title>
      <link>/legacy/docs/transportation/dsf/flights/supplements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/legacy/docs/transportation/dsf/flights/supplements/</guid>
      <description>Method Goals This method aims to get the available supplements and their price information (before or after a reservation has been done).
Request Format The Supplements request can be done by two different ways: with a group of Itineraries (before a reservation) or with a booking locator (after a reservation).
Response Format The result returns a list of the available supplements (seats, baggage, fare rules, payment methods, etc.)
Remarks Not implemented by all suppliers</description>
    </item>
    
    <item>
      <title>SupplementsReservation</title>
      <link>/legacy/docs/transportation/dsf/flights/supplementsreservation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/legacy/docs/transportation/dsf/flights/supplementsreservation/</guid>
      <description>Method Goals This method aims to add supplements (seats, baggage, etc) to a reservation done previously.
Request Format Must contain the Itineraries returned in SupplementsRS and any of the possible ways to retrieve the provider booking (by locator, by email, etc.)
Response Format The result returns an invoice with all the supplement charges.
Remarks Not implemented by all suppliers
SupplementsReservationRQ Description    Element Number Type Description     SupplementsReservationRQ 1  Root node.</description>
    </item>
    
    <item>
      <title>Valuation</title>
      <link>/legacy/docs/transportation/dsf/ferries/valuation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/legacy/docs/transportation/dsf/ferries/valuation/</guid>
      <description>Method Goals This method aims to do a prebook of the selected Option. This Option must be selected in the previous step ( Availability ).
The Valuation request must be built from results of a single Availability. Mixing OneWay options from different Availability calls do not grant the correct functionability of the Valuation.
Request Format The Valuation request can be done by two different ways: with a single Itinerary or multiple Itineraries.</description>
    </item>
    
    <item>
      <title>Valuation</title>
      <link>/legacy/docs/transportation/dsf/flights/valuation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/legacy/docs/transportation/dsf/flights/valuation/</guid>
      <description>Method Goals This method aims to return the total price of the selected Option. This Option must be selected in the previous step ( Availability ).
Request Format The Valuation request can be done by two different ways: with a single Itinerary or multiple Itineraries.
 Multiple Itineraries :  In this method, the request will have as many Itineraries as there are Journeys . Mainly used for one-way tickets.</description>
    </item>
    
  </channel>
</rss>