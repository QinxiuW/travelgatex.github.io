<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TravelgateX Documentation</title>
    <link>/</link>
    <description>Recent content on TravelgateX Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 24 Apr 2017 18:36:24 +0200</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Booking flow</title>
      <link>/hotelx/howtos/bookingflow/flow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/howtos/bookingflow/flow/</guid>
      <description>Search, Quote and Book transactions must be executed sequentally in order to book hotel rooms in a Seller.
 --                                            1. SEARCH  2. QUOTE  3.</description>
    </item>
    
    <item>
      <title>Build An OTA</title>
      <link>/travelgatex/tutorials/ota-site/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/tutorials/ota-site/</guid>
      <description>Creating your full OTA This topic describes how to build your own OTA using HotelX.
Before you begin  Basic knowledge of Angular Read HotelX, which contains information about the HotelX API  Scenario: Create an Online Travel Agency written in Angular For this quickstart tutorial, we have prepared a repository that contains the full Angular code for the OTA clone. All you need to do is to get TravelgateX credentials and connect it with the Angular application.</description>
    </item>
    
    <item>
      <title>Certification Goals</title>
      <link>/hotelx/howtos/certification_process/goals/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/howtos/certification_process/goals/</guid>
      <description>The Certification process intention is to test and ensure that your integration is performed correctly, this means, that functionality and implementation of the relevant and mandatory information are done correctly and without errors. All of this is focused to avoid issues with the final consumer, or he/she being misled by any incorrect information or not desirable API uses. Before starting the certification process, make sure you have followed the Welcome Pack instructions.</description>
    </item>
    
    <item>
      <title>ChannelX</title>
      <link>/travelgatex/release-notes/products-changelogs/changelog-channelx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/release-notes/products-changelogs/changelog-channelx/</guid>
      <description>To make it easier for users and contributors to see precisely what notable changes have been made on the product.
Product Page Link
All notable changes to this product will be documented in this page.Under construction!We have logged this resource on our roadmap and we are currently working through extending all of the resources in our documentation. If you need specific resources (such as this page), please let us know by using one of the following channels:</description>
    </item>
    
    <item>
      <title>Common resources</title>
      <link>/travelgatex/concepts/common-resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/concepts/common-resources/</guid>
      <description>On this page you will learn more about common resources used in TravelgateX. You can also refer to the overarching core concepts that apply to all TravelgateX APIs.
Supplier A Supplier is a Partner who is connected to TravelgateX on the supply side in order to sell their product to connected Buyers.
Access An Access is a set of credentials and configuration in order to access the system of a Supplier.</description>
    </item>
    
    <item>
      <title>Connect a New Supplier</title>
      <link>/hotelx/howtos/howto-connect-supplier/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/howtos/howto-connect-supplier/</guid>
      <description>In order to connect to a new Supplier please follow the steps below:
 Login to our Connect Form Select the supplier you want to connect to and enter the connectivity credentials. A Jira ticket will be raised and you will receive a confirmation email. Our Activations Department will contact you when the process is ready.  In order to activate a new Supplier a few processes need to be executed - this process depends on each Supplier and it could take up to 24 hours.</description>
    </item>
    
    <item>
      <title>FAQs</title>
      <link>/hotelx/faqs/frequently-asked-questions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/faqs/frequently-asked-questions/</guid>
      <description>Hotels in test Do I have access to all the hotels in the test environment?
No, we use a test supplier, so there is a limited number of hotels in the database to be used.
Languages allowed Which are the languages allowed in HotelX?
The new aggregator allows every language, it will depend from each supplier.
Maximum hotels code How many hotels code are allowed to be requested at the same time?</description>
    </item>
    
    <item>
      <title>Overview</title>
      <link>/channelx/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/channelx/overview/</guid>
      <description>Under construction!We have logged this resource on our roadmap and we are currently working through extending all of the resources in our documentation. If you need specific resources (such as this page), please let us know by using one of the following channels:
Join us on Slack and let us know what resources you need us to prirotizeSend us a Jira service desk requestLog an issues request with usWrite this page yourself!</description>
    </item>
    
    <item>
      <title>Overview</title>
      <link>/flightx/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/flightx/overview/</guid>
      <description>This page shows you how to perform basic hotel book using GraphQL Playground.</description>
    </item>
    
    <item>
      <title>Overview</title>
      <link>/getting-started/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/getting-started/overview/</guid>
      <description>TravelgateX provides a single API endpoint for all of our API products. This makes it easy for you to integrate our full travel catalog and services into your applications (regardless of whether you are integrating to a website, mobile app, widget, or other interface).
Completely rebuilt in GraphQL from our many years of experience with travel XML integrations, we are offering state of the art, cutting edge API technology that is quick to learn and makes integration simple and fast.</description>
    </item>
    
    <item>
      <title>Overview</title>
      <link>/hotelx/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/overview/</guid>
      <description>The HotelX API is a powerful accomodation aggregation solution that will speed up your travel websites and apps and expand your catalogue of hotel booking services.
Using HotelX, you can improve your hotel search response times and their accuracy by customizing aggregated responses based on your preferred criteria.
The below map shows our architecture and the average impact on response rates caused by each layer.
  Each and every layer described in the this figure is explained as follows:</description>
    </item>
    
    <item>
      <title>Overview</title>
      <link>/hotelx/plugins/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/overview/</guid>
      <description>Introduction Plugins are custom code, executed in HotelX servers, that add or modify specific functionalities. Any Partner can develop custom Plugins, nevertheless HotelX, HotelX has developed many Plugins available for anyone to use out of the box.
Flows HotelX query or mutation determine what flow is executed. Plugins can be executed in different Queries or Mutations:
 Search Quote Book Cancel  Steps Step is the minium container where plugins are executed sequentially.</description>
    </item>
    
    <item>
      <title>Overview</title>
      <link>/insights/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/insights/overview/</guid>
      <description>This page shows you how to perform basic hotel book using GraphQL Playground.</description>
    </item>
    
    <item>
      <title>Overview</title>
      <link>/mappea/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/mappea/overview/</guid>
      <description>{{ % wip % }}</description>
    </item>
    
    <item>
      <title>Overview</title>
      <link>/stats/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/stats/overview/</guid>
      <description>This page shows you how to perform basic hotel book using GraphQL Playground.</description>
    </item>
    
    <item>
      <title>Overview</title>
      <link>/travelgatex/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/overview/</guid>
      <description>This page provides an overview of the TravelgateX platform.
GraphQL Gateway TravelgateX is the travel API completely based in GraphQL. Unlike many legacy XML Soap APIs, GraphQL enables each client to ask for and receive exactly the data that is needed. Learn more by reading our Learning GraphQL guides.
Our Gateway is the only endpoint to access all of our APIs. It is written in NodeJS. This makes it fast, stable, secure, fault tolerant and load balanced between many datacenters from four different cloud providers: Microsoft Azure, Google Cloud Platform, Hetzner and TotalUptime.</description>
    </item>
    
    <item>
      <title>Overview</title>
      <link>/travelgatex/security/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/security/overview/</guid>
      <description>This page describes the how security is implemented in TravelgateX platform.
Introduction TravelgateX offers a fine-grained access control and visibility for centrally managing Resources, which are granted to Partners belonging to Organizations.
Authentication Authentication is the process of authorizing or making sure that the Partner is the correct one. Every request to TravelgateX GraphQL API must carry an Access Token whether it&amp;rsquo;s an API Key or a JSON Web Token (JWT).</description>
    </item>
    
    <item>
      <title>Quickstart</title>
      <link>/getting-started/quickstart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/getting-started/quickstart/</guid>
      <description>Four steps to using our API If you&amp;rsquo;re ready to start searching for a hotel, getting a quote and booking it right away, try out the TravelgateX API by following the steps below:
 STEP 1: Get to know our APIs. Read through our documentation and test some sample calls in our API Playground. You can use a test API key and start experimenting with our APIs straight away.</description>
    </item>
    
    <item>
      <title>Roadmap</title>
      <link>/hotelx/release-notes/roadmap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/release-notes/roadmap/</guid>
      <description>We have put together a GitHub Project where we will keep updating on the things we’ve in our plans.
Here is the GitHub project with Public Roadmap of TravelgateX.
The Project has a few columns that act as the status whereas cards are the items that we have in our plans. We have also labelled each issue so it would clarify if the item would be added in the HotelX, Documentation, etc&amp;hellip;</description>
    </item>
    
    <item>
      <title>Roadmap</title>
      <link>/travelgatex/release-notes/roadmap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/release-notes/roadmap/</guid>
      <description>We have put together a GitHub Project where we will keep updating on the things we’ve in our plans.
Here is the GitHub project with Public Roadmap of TravelgateX.
The Project has a few columns that act as the status whereas cards are the items that we have in our plans. We have also labelled each issue so it would clarify if the item would be added in the HotelX, Documentation, etc&amp;hellip;</description>
    </item>
    
    <item>
      <title>Settings</title>
      <link>/hotelx/concepts/settings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/concepts/settings/</guid>
      <description>On this page you will learn more about settings in HotelX.
What are settings? Settings are the common configuration that will be used in order to build the request to the supplier/s.
There are two kind of settings, overridable and partially overridable. You can find the partially overridable settings in the first level of settings and are known as HotelX_Settings. These settings are formed by some non-overridable settings such as &amp;ldquo;group&amp;rdquo; and &amp;ldquo;testMode&amp;rdquo;, some overridable global settings such as &amp;ldquo;timeout&amp;rdquo;, &amp;ldquo;auditTransactions&amp;rdquo;, etc.</description>
    </item>
    
    <item>
      <title>Style Guide</title>
      <link>/community/style-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/community/style-guide/</guid>
      <description>This document provides guidance for contributors to the TravelgateX Platform Community site.
 Caveats Types of documentation Designing a doc Visual assets File organization in GitHub General content guidelines General style guidelines Markdown usage Voice and tone Including source code Writing resources  Caveats Let&amp;rsquo;s get these things out of the way right up front:
 Don&amp;rsquo;t sell or do marketing. -&amp;gt; TBD Don&amp;rsquo;t editorialize. Document. Assure that the content you&amp;rsquo;re writting is not duplicated on another page, avoid incosistences.</description>
    </item>
    
    <item>
      <title>Uploading Strategies</title>
      <link>/travelgatex/data-automation/uploading-strategies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/data-automation/uploading-strategies/</guid>
      <description>How to upload data to the platform There are two ways of uploading data to the platform:
 Secure File Transfer Protocol (SFTP) GraphQL mutation  We recommend continuing to use SFTP at present while we build out more GraphQL resources.
While you can make your updates via a mutation, we have not yet written up resources to show you how to do that.
If you require these resources immediately, please contact us via Slack, Jira or by raising an issue in GitHub.</description>
    </item>
    
    <item>
      <title>Writting release notes</title>
      <link>/community/release-notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/community/release-notes/</guid>
      <description>This document assists on write release notes with the changelog of products.
 Release Notes Organization How to keep a good changelog  General Principles  What is a changelog? Why keep a changelog? Who needs a changelog?   How do I make a good changelog?  Guiding Principles Types of changes  How can I reduce the effort required to maintain a changelogs document? Can changelogs be bad?</description>
    </item>
    
    <item>
      <title>Access, Supplier and Context</title>
      <link>/hotelx/concepts/accesses-supplier-context/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/concepts/accesses-supplier-context/</guid>
      <description>On this page you will learn more about Core Entities used in HotelX. You can also refer to the overarching core concepts that apply to all TravelgateX APIs.
Supplier Product segmentation over a Supplier API implementation. Each Supplier has a Supplier code. These are unique values and they are used consistently throughout all TravelgateX implementations. See our Supplier database, or ask us via our Jira Service desk for a list of Supplier codes.</description>
    </item>
    
    <item>
      <title>Blacklist</title>
      <link>/hotelx/plugins/black-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/black-list/</guid>
      <description>The blacklist plugin is used to ignore hotel code(s) when we a search query is executed. There are 2 types of blacklists:
 Filter hotel code of a specific Access Filter hotel codes of a specific Supplier  Loading a blacklist is as easy as following the steps below:
Access Blacklist Blacklist is applied for specific Access
File Format The file should be in the below format:
 Encoding: UTF-8</description>
    </item>
    
    <item>
      <title>Booking Flow</title>
      <link>/hotelx/concepts/search-mode/booking-flow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/concepts/search-mode/booking-flow/</guid>
      <description>Search, Quote and Book transactions must be executed sequentally in order to book hotel rooms in a Seller.
 --                                            1. SEARCH  2. QUOTE  3.</description>
    </item>
    
    <item>
      <title>Changelog</title>
      <link>/hotelx/release-notes/changelog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/release-notes/changelog/</guid>
      <description>It makes it easier for users and contributors to see the most notable changes that have been made on HotelX product.
All notable changes on our platform will be documented on this page.2018-11-20  Added geonames in Hotel-List Added access code in book log in some special cases of commission    Partially synchronous resource caches in Hotel-Quote, Hotel-Book, Hotel-Cancel, Hotel-Booking   2018-11-19  Fix Stats Fix Hotels requested stats in Access and Transaction spans where the count wasn&amp;rsquo;t correct in some cases    Margin plugin compares net commission in order to decide discarding or mantaining an option.</description>
    </item>
    
    <item>
      <title>Changelog</title>
      <link>/travelgatex/release-notes/changelog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/release-notes/changelog/</guid>
      <description>To make it easier for users and contributors to see precisely what notable changes have been made on TravelgateX.
All notable changes on TravelgateX platform will be documented in this page.2018-11-20  GraphQL Schema updated.    Refresh token funcition. Create Organization. Errors description. Update group    Entities call when move folder and change members refresh token position.    Useless folders from create folder template   2018-11-07  GraphQL Schema updated.</description>
    </item>
    
    <item>
      <title>Common Errors</title>
      <link>/hotelx/faqs/common-errors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/faqs/common-errors/</guid>
      <description>Error 204 - No Results Found Error “204 No results found” is a common error that you can receive in the Search Query response. This error means that the product you are trying to obtain is not available.
There are several potential reasons as to why this error occurs:
 The product is not available for the dates in the request. The product is not available for the number of passengers selected in the request.</description>
    </item>
    
    <item>
      <title>Configure HotelX Security</title>
      <link>/travelgatex/tutorials/howto-configure-permissions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/tutorials/howto-configure-permissions/</guid>
      <description>Granting Permissions This topic describes how to configure permissions for a organization using HotelX and Stats.
Before you begin  Read IAM, which contains information about how TravelgateX manages security Read HotelX, which contains information about the HotelX API  Scenario: Organization buying suppliers through HotelX In this scenario, organanization org_test logs on to TravelgateX in order to use HotelX to buy product from suppliers.
Distribution will be made through 2 different channels, end users will use org_test_B2C_site whereas that org_test_B2B_site will be used for business users.</description>
    </item>
    
    <item>
      <title>FlightsX</title>
      <link>/travelgatex/release-notes/products-changelogs/changelog-flightsx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/release-notes/products-changelogs/changelog-flightsx/</guid>
      <description>To make it easier for users and contributors to see precisely what notable changes have been made on the product.
Product Page Link
All notable changes to this product will be documented in this page.Under construction!We have logged this resource on our roadmap and we are currently working through extending all of the resources in our documentation. If you need specific resources (such as this page), please let us know by using one of the following channels:</description>
    </item>
    
    <item>
      <title>GraphQL Overview</title>
      <link>/learning-graphql/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/learning-graphql/overview/</guid>
      <description>What is GraphQL? GraphQL is a query language for your API. It was first designed by Facebook. It&amp;rsquo;s a new way of dealing with and managing data models via API, and is especially useful for decoupling client from server logic.
 GraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data. GraphQL provides a complete and understandable description of the data in your API, gives clients the power to ask for exactly what they need and nothing more, makes it easier to evolve APIs over time, and enables powerful developer tools.</description>
    </item>
    
    <item>
      <title>How to apply</title>
      <link>/hotelx/howtos/certification_process/howtoapply/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/howtos/certification_process/howtoapply/</guid>
      <description>Our Certification Process should be completed once you have finished the development.
Once Certification Process logs have been delivered through our Customer Care service desk, we will review it and advise you once the integration is certified.
 Within your WelcomePack email you should have received a user to access our customer care portal. Click on Certification Process option and upload or drag and drop your logs. You will be issued a WECARE ticket number.</description>
    </item>
    
    <item>
      <title>Identity and access management</title>
      <link>/travelgatex/security/identity-access-management/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/security/identity-access-management/</guid>
      <description>This section provides an overview of Identity and access management.
TravelgateX identity and acccess management lets administrators authorize who can take action on specific resources, giving you full control and internal visibility to manage resources centrally.
Identity and access management provides an unified view of your security policy across your entire organization, with built-in auditing to ease compliance processes.
As an administrator, when you register with us, we provide you with login details to access your TravelgateX account, including a username and password.</description>
    </item>
    
    <item>
      <title>Mapping</title>
      <link>/hotelx/plugins/mapping/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/mapping/</guid>
      <description>The map plugins are used to change the supplier codes to client codes or vice versa. There are four types:
 Hotel map  Board Map  Room Map  Rate Map   Our map formats share a common structure. In order to load your maps you just need to follow the instructions below:
Example files You can download example for the files structure here
Entity Maps File Format The file should be in the following format:</description>
    </item>
    
    <item>
      <title>Quickstart</title>
      <link>/hotelx/quickstart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/quickstart/</guid>
      <description>const apiKeyJO = &#34;q8ggxpoVDW76Kw918hwnnRvxlZmAP2QZ&#34;;const apiKeyDC = &#34;64780338-49c8-4439-7c7d-d03c2033b145&#34;;$(document).ready(main);function main() {const q = &#39;[{\x22apikey\x22:\x2264780338-49c8-4439-7c7d-d03c2033b145\x22,\x22gist\x22:\x22https:\/\/gist.githubusercontent.com\/tgx-bot\/6972ecae51e849fe8c49305bf0032dfe\/raw\x22,\x22divname\x22:\x22div_authorization\x22},{\x22apikey\x22:\x2264780338-49c8-4439-7c7d-d03c2033b145\x22,\x22gist\x22:\x22https:\/\/gist.githubusercontent.com\/tgx-bot\/533a8e1259e5245a4c3f590964ec506d\/raw\x22,\x22divname\x22:\x22div_search\x22},{\x22apikey\x22:\x2264780338-49c8-4439-7c7d-d03c2033b145\x22,\x22gist\x22:\x22https:\/\/gist.githubusercontent.com\/tgx-bot\/b4e691b2b1567c0a80f5926b833170e1\/raw\x22,\x22divname\x22:\x22div_quote\x22},{\x22apikey\x22:\x2264780338-49c8-4439-7c7d-d03c2033b145\x22,\x22gist\x22:\x22https:\/\/gist.githubusercontent.com\/tgx-bot\/bbbb043c0cdfe1adb33a897f69a04e2f\/raw\x22,\x22divname\x22:\x22div_book\x22},{\x22apikey\x22:\x2264780338-49c8-4439-7c7d-d03c2033b145\x22,\x22gist\x22:\x22https:\/\/gist.githubusercontent.com\/tgx-bot\/034dcbeb8affb2c4875b2046ea385c0d\/raw\x22,\x22divname\x22:\x22div_cancel\x22},{\x22apikey\x22:\x2264780338-49c8-4439-7c7d-d03c2033b145\x22,\x22gist\x22:\x22https:\/\/gist.githubusercontent.com\/tgx-bot\/36e1ade6d5eb2a074dc6cb1141ac2136\/raw\x22,\x22divname\x22:\x22div_bookinglist\x22}]&#39;;const queries = JSON.parse(q);for (const q of queries) {iterateQueries(q)}}function iterateQueries(q) {if(!q.gist.includes(&#39;http&#39;)) return;$.get(q.gist, function (data) {q.data = data;renderGist(q);});}function renderGist(q) {var fetchURL = &#39;https://api.travelgatex.com&#39;;var search = window.location.search;var parameters = {};search.substr(1).split(&#39;&amp;&#39;).forEach(function (entry) {var eq = entry.indexOf(&#39;=&#39;);if (eq = 0) {parameters[decodeURIComponent(entry.</description>
    </item>
    
    <item>
      <title>Quotas &amp; Limits</title>
      <link>/travelgatex/concepts/quotas-limits/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/concepts/quotas-limits/</guid>
      <description>Under construction!We have logged this resource on our roadmap and we are currently working through extending all of the resources in our documentation. If you need specific resources (such as this page), please let us know by using one of the following channels:
Join us on Slack and let us know what resources you need us to prirotizeSend us a Jira service desk requestLog an issues request with usWrite this page yourself!</description>
    </item>
    
    <item>
      <title>Aggregation</title>
      <link>/hotelx/plugins/aggregation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/aggregation/</guid>
      <description>Aggregation plugins extends HotelX allowing filtering Supplier options and responses using different business rules.
KeyFilter Filters Supplier options based on field keys applying a selector function over field values.
It&amp;rsquo;s based on SQL Aggregate Functions but filtering, not aggregating.
 Field Keys as a combination of:  SupplierCode  HotelCode BoardCode RoomCode Refundable Market PaymentType Promotion Supplement Surcharges Rate rules    Parameters    key value type condition description     primaryKey string mandatory It is the criteria used to aggregate, the value is a set of criteria separated by commas, the possible values are:</description>
    </item>
    
    <item>
      <title>Basic Concepts</title>
      <link>/learning-graphql/basic_concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/learning-graphql/basic_concepts/</guid>
      <description>What are Queries &amp;amp; Mutations There are two basic operations in GraphQL schemas:  Queries: Requesting data from a data model. An example Query would be: checking availability of hotels for a particular date and location  Mutations: Making changes and carrying out transactions on data in the data model. An example Mutation would be: making a booking to reserve a hotel room on a particular date.
Queries Queries ask the system to provide some data, based on specfic parameters.</description>
    </item>
    
    <item>
      <title>Check configuration</title>
      <link>/hotelx/checkconfig/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/checkconfig/</guid>
      <description>This query allows you to retrieve relevant information like supplier access code (link a lo que es el access), supplier name, supplier configuration, supplier context, type of connection: test or live; active or not. You can then use this information to perform other queries/mutations.
To run this query, you should send within the headers your Apikey
{ admin{ accesses{ edges{ node{ accessData{ name isActive code supplier{ supplierData{ code name isActive provider{ code name isActive isPublic } context } } isTest user password parameters{ key value } } } } } } }  </description>
    </item>
    
    <item>
      <title>Commission</title>
      <link>/hotelx/plugins/net-price/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/net-price/</guid>
      <description>Net Price is an optional plugin and allows to net all the prices in an option.
 NetpriceX
 CommissionX (NetpriceX Extended funcionality)
  NetPriceX Goals This plugin receives an Option by parameter and returns an Option with all the prices with net value. This plugin reads information of commissions from ftp. It is mandatory to load at least supplier&amp;rsquo;s commission file. Depending of the files in ftp, this plugin can apply two different commission values over prices.</description>
    </item>
    
    <item>
      <title>Commission supplier</title>
      <link>/hotelx/plugins/format-files/commission_supplier/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/format-files/commission_supplier/</guid>
      <description>The commission supplier file should be in the below format:
Commission supplier File Format The file should be in the below format:
 Encoding: UTF-8  File Name: commission_supplier.csv  supplier commission  Extension file: csv Headers:  supplier → supplier code commission → commission value, decimal separator must be point (&amp;ldquo;.&amp;rdquo;)  Delimiter: Comma (“,”) Separator for multiples codes in the same row: Semicolon (&amp;ldquo;;&amp;rdquo;) Directory: /F[folder code]_[unique code]/HotelX_[unique code]/  Sample File Name: commission_supplier.</description>
    </item>
    
    <item>
      <title>Concepts</title>
      <link>/getting-started/concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/getting-started/concepts/</guid>
      <description>The TravelgateX platform and APIs all use a consistent set of basic concepts so that whatever API you use on our platform, you can be confident that it will work with the same definitions as all of the others you are familiar with.
Here is an overview of the key concepts of our platform.
Access An Access is a set of credentials and the authentication configuration that enables a Buyer to access a Supplier.</description>
    </item>
    
    <item>
      <title>GraphQL Schema Changes</title>
      <link>/hotelx/release-notes/graphql-schema-changes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/release-notes/graphql-schema-changes/</guid>
      <description>The GraphQL HotelX schema change log is a list of recent and upcoming changes to our GraphQL API schema. It includes backwards-compatible changes, schema previews, and upcoming breaking changes.
Check out this list of new releases and changes applied on the HotelX GraphQL API.
Under construction!We have logged this resource on our roadmap and we are currently working through extending all of the resources in our documentation. If you need specific resources (such as this page), please let us know by using one of the following channels:</description>
    </item>
    
    <item>
      <title>GraphQL Schema Changes</title>
      <link>/travelgatex/release-notes/graphql-schema-changes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/release-notes/graphql-schema-changes/</guid>
      <description>The GraphQL schema change log is a list of recent and upcoming changes to our GraphQL API schema. It includes backwards-compatible changes, schema previews, and upcoming breaking changes.
Check out this list of new releases and changes applied on the TravelgateX GraphQL API.
2018-11-20 ✅ Input field CreateOrganizationInput.organization changed type from ID! to ID
✅ Field country was added to object type GeonameData
2018-11-07 🛑 Field asserts was removed from object type StatsInfo</description>
    </item>
    
    <item>
      <title>Mappea</title>
      <link>/travelgatex/release-notes/products-changelogs/changelog-mappea/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/release-notes/products-changelogs/changelog-mappea/</guid>
      <description>To make it easier for users and contributors to see precisely what notable changes have been made on the product.
Product Page Link
All notable changes to this product will be documented in this page.Under construction!We have logged this resource on our roadmap and we are currently working through extending all of the resources in our documentation. If you need specific resources (such as this page), please let us know by using one of the following channels:</description>
    </item>
    
    <item>
      <title>Markup</title>
      <link>/hotelx/plugins/markup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/markup/</guid>
      <description>Markups type plugins permits to apply markup percentages over a price, markup is a field in price composed of a set of rules and a new price with an added percentage, the percentage is the sum of every rule applied.
Although this plugin can be customized, we already offer an implementation.
MarkupX This markup implementation is supported by our web application which permits the management of an organization&amp;rsquo;s rules, the modification of these rules are applied in your product at real time.</description>
    </item>
    
    <item>
      <title>Playground</title>
      <link>/getting-started/playground/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/getting-started/playground/</guid>
      <description>Try it For Yourself API Playground is an interactive, fun, and super quick way to get to know our APIs.
In the API Playground, as you start to type the query, it will autocomplete with the fields available to complete your query parameters. You can also click on the green Schema button on the right of the Playground window to learn more about our data model and to see all of the options available for building your query.</description>
    </item>
    
    <item>
      <title>Preference</title>
      <link>/hotelx/plugins/preference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/preference/</guid>
      <description>Preference is an optional plugin and allows to offer options preferentially in relation to the rules informed by the client.
Preference Goals The preference plugin offers those options that match with rule preferences reported. By doing this, the options will be returned in a preferential way.
Sequentially, the rules will be evaluated until a match is found, upon finding it, the process will be stopped and the preference will be evaluated.</description>
    </item>
    
    <item>
      <title>Quotas &amp; Limits</title>
      <link>/hotelx/concepts/quotas-limits/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/concepts/quotas-limits/</guid>
      <description>HotelX limits the maximum rate of requests and graph deep. Specific policies vary depending on resource availability, user profile, service usage history, and other factors, and are subject to change without notice</description>
    </item>
    
    <item>
      <title>Request Headers</title>
      <link>/travelgatex/concepts/request-headers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/concepts/request-headers/</guid>
      <description>The following HTTP request headers are relevant to all request methods (GET, PUT, POST and DELETE) and they are required in all API requests.
Authorization (Required) The HTTP Authorization request header contains the credentials to authenticate a user agent with a server, usually after the server has responded with a 401 Unauthorized status and the WWW-Authenticate header.
Syntax Authorization: &amp;lt;type&amp;gt; &amp;lt;credentials&amp;gt;  Directives &amp;lt;type&amp;gt;:
 ApiKey Bearer  &amp;lt;credential&amp;gt;: String</description>
    </item>
    
    <item>
      <title>Safety Margin</title>
      <link>/hotelx/plugins/safety_margin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/safety_margin/</guid>
      <description>Safety Margin is an optional plugin that allows discarding options that have a commission lower than expected. The expected commission has to be loaded in safety-margin file, and is the commission over net, in other words, ganancy percentage over option&amp;rsquo;s cost.
Safety Margin Goals The safety margin plugin discards those options that have a commission lower than expected. By doing this, only options that have a commission over net, equal or lower than those reported in the file will be returned.</description>
    </item>
    
    <item>
      <title>Search</title>
      <link>/hotelx/howtos/bookingflow/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/howtos/bookingflow/search/</guid>
      <description>Search is the first operation in the booking flow. It allows to check which available rooms there are for the requested hotels or for the hotels in the requested destination for a given range of dates and for a given pax distribution.
Advanced criteria It explains different parameters that can be set up in the request Mandatory
 CheckIn: check-in date for the booking. Format: YYYY-MM-DD CheckOut: check-out date for the booking.</description>
    </item>
    
    <item>
      <title>Search Single Mode &amp; Multi Mode</title>
      <link>/hotelx/concepts/search-mode/search-single-mode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/concepts/search-mode/search-single-mode/</guid>
      <description>On this page you will learn about Transactional Booking Flow to Search, quote and confirm a reservation. You will also see the difference between the Search Single Mode VS Search Multi Mode.
Search Single Mode This mode is used when the client only wants to get options from a single access, for this, the client must indicate in the request the code of the access that they want to use.</description>
    </item>
    
    <item>
      <title>Search Single Mode &amp; Multi Mode</title>
      <link>/hotelx/concepts/search-single-mode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/concepts/search-single-mode/</guid>
      <description>On this page you will learn about Transactional Booking Flow to Search, quote and confirm a reservation. You will also see the difference between the Search Single Mode VS Search Multi Mode.
Search Single Mode This mode is used when the client only wants to get options from a single access, for this, the client must indicate in the request the code of the access that they want to use.</description>
    </item>
    
    <item>
      <title>Use cases</title>
      <link>/hotelx/howtos/certification_process/usecases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/howtos/certification_process/usecases/</guid>
      <description>To ensure that your connection to our HotelX API is set up correctly, you’ll need to make the following test scenario. You can choose the hotel and dates you prefer:
 Case 1: 1 room with 2 Adults for a Package rate rule. Case 2: 1 room with 2 Adults and 1 room with 2 adults + 1 Child 5 years old for a non-refundable rate. Case 3: 1 room with 2 Adults and 1 room with 2 adults + 1 Child 5 years old and 1 room for 3 adults for a refundable rate.</description>
    </item>
    
    <item>
      <title>Currency Converter</title>
      <link>/hotelx/plugins/converter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/converter/</guid>
      <description>Currency converter is an optional plugin and allows to apply currency conversion over all the prices in one Option.
CurrencyX This plugin receives an Option and a currency and returns the same option with currency conversion applied over all the prices. It reads the information about rates from a file located in our ftp. Is mandatory that this file exists in the ftp and satisfies all the requirements below. Otherwise, an error will be returned.</description>
    </item>
    
    <item>
      <title>Hotel Commission</title>
      <link>/hotelx/plugins/format-files/commission_netprice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/format-files/commission_netprice/</guid>
      <description>The commission file should be in the below format:
Hotel Commission File Format The hotel commission file should be in the below format:
 Encoding: UTF-8  File Name: commission_hotel.csv  commission hotel  Extension file: csv Headers:  supplier → supplier code  hotel → hotel code  commission → commission value, decimal separator must be point (&amp;ldquo;.&amp;rdquo;)  Delimiter: Comma (“,”) Separator for multiples codes in the same row: Semicolon (&amp;ldquo;;&amp;rdquo;) Directory: /F[folder code]_[unique code]/HotelX_[unique code]/  Sample File Name: commission_supplier.</description>
    </item>
    
    <item>
      <title>Inventory</title>
      <link>/travelgatex/release-notes/products-changelogs/changelog-inventory/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/release-notes/products-changelogs/changelog-inventory/</guid>
      <description>To make it easier for users and contributors to see precisely what notable changes have been made on the product.
Product Page Link
All notable changes to this product will be documented in this page.Under construction!We have logged this resource on our roadmap and we are currently working through extending all of the resources in our documentation. If you need specific resources (such as this page), please let us know by using one of the following channels:</description>
    </item>
    
    <item>
      <title>Management Flow</title>
      <link>/hotelx/concepts/management-flow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/concepts/management-flow/</guid>
      <description>On this page you will learn how to manage and control bookings and management flow. Managing operations can be used in order to operate above Seller&amp;rsquo;s bookings.
Cancellation Performs a Seller booking cancellation.
Operation { &amp;quot;mutation&amp;quot;: { &amp;quot;hotelX&amp;quot;: { &amp;quot;cancel&amp;quot;: { } } } }  PlayGround Samples  cancel   Booking Performs a seller booking list.
In this case you can search the bookings with references or by dates, the dates can be arrival dates or booking dates.</description>
    </item>
    
    <item>
      <title>Processor</title>
      <link>/hotelx/plugins/processor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/processor/</guid>
      <description>Processor plugins extends HotelX allowing multiple operation types. It can modify request and response messages, allowing a full range of operations:
 Split arrays Join arrays Modify object values Add or remove object instances  </description>
    </item>
    
    <item>
      <title>Quote</title>
      <link>/hotelx/howtos/bookingflow/quote/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/howtos/bookingflow/quote/</guid>
      <description>Quote is an operation used to assess and valuate the rate before the actual booking. It returns the same information as the Search response for a hotel rate with up-to-date price, along with additional information regarding the rate: rate breakdown and cancellation policies.
Advanced criteria It explains different parameters that can be set up in the request (it indicates which ones are mandatory)
 optionRefId: Identifier of the option chosen in Search.</description>
    </item>
    
    <item>
      <title>Search by destination</title>
      <link>/hotelx/plugins/search_by_destination/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/search_by_destination/</guid>
      <description>const apiKeyJO = &#34;q8ggxpoVDW76Kw918hwnnRvxlZmAP2QZ&#34;;const apiKeyDC = &#34;64780338-49c8-4439-7c7d-d03c2033b145&#34;;$(document).ready(main);function main() {const q = &#39;[{\x22apikey\x22:\x2264780338-49c8-4439-7c7d-d03c2033b145\x22,\x22gist\x22:\x22https:\/\/gist.githubusercontent.com\/tgx-bot\/74a01699ccc7f7a8f043f6583e64fcde\/raw\x22,\x22divname\x22:\x22div_admin_destinations\x22},{\x22apikey\x22:\x2264780338-49c8-4439-7c7d-d03c2033b145\x22,\x22gist\x22:\x22https:\/\/gist.githubusercontent.com\/tgx-bot\/f820c0508f7d47432eaad34823d426e0\/raw\x22,\x22divname\x22:\x22div_searchbydestinations\x22}]&#39;;const queries = JSON.parse(q);for (const q of queries) {iterateQueries(q)}}function iterateQueries(q) {if(!q.gist.includes(&#39;http&#39;)) return;$.get(q.gist, function (data) {q.data = data;renderGist(q);});}function renderGist(q) {var fetchURL = &#39;https://api.travelgatex.com&#39;;var search = window.location.search;var parameters = {};search.substr(1).split(&#39;&amp;&#39;).forEach(function (entry) {var eq = entry.indexOf(&#39;=&#39;);if (eq = 0) {parameters[decodeURIComponent(entry.</description>
    </item>
    
    <item>
      <title>Thinking in GraphQL</title>
      <link>/learning-graphql/thinking_in_graphql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/learning-graphql/thinking_in_graphql/</guid>
      <description>A Paradigm Shift GraphQL is a query language, and as such it does exactly that: it queries servers in order to get results back. With GraphQL, you can choose exactly what data you want to retrieve. GraphQL is a typed query language. That means that it has a lot of predictability, as each piece of data has its own type, so we know what sort of data we will be getting back.</description>
    </item>
    
    <item>
      <title>Book</title>
      <link>/hotelx/howtos/bookingflow/book/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/howtos/bookingflow/book/</guid>
      <description>const apiKeyJO = &#34;q8ggxpoVDW76Kw918hwnnRvxlZmAP2QZ&#34;;const apiKeyDC = &#34;64780338-49c8-4439-7c7d-d03c2033b145&#34;;$(document).ready(main);function main() {const q = &#39;[{\x22apikey\x22:\x2264780338-49c8-4439-7c7d-d03c2033b145\x22,\x22gist\x22:\x22https:\/\/gist.githubusercontent.com\/tgx-bot\/31d4d32ea8e8bc8ab5d7bc3910df72c0\/raw\x22,\x22divname\x22:\x22div_booking\x22}]&#39;;const queries = JSON.parse(q);for (const q of queries) {iterateQueries(q)}}function iterateQueries(q) {if(!q.gist.includes(&#39;http&#39;)) return;$.get(q.gist, function (data) {q.data = data;renderGist(q);});}function renderGist(q) {var fetchURL = &#39;https://api.travelgatex.com&#39;;var search = window.location.search;var parameters = {};search.substr(1).split(&#39;&amp;&#39;).forEach(function (entry) {var eq = entry.indexOf(&#39;=&#39;);if (eq = 0) {parameters[decodeURIComponent(entry.</description>
    </item>
    
    <item>
      <title>ChannelX breaking changes</title>
      <link>/channelx/release-notes/breaking-changes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/channelx/release-notes/breaking-changes/</guid>
      <description>Under construction!We have logged this resource on our roadmap and we are currently working through extending all of the resources in our documentation. If you need specific resources (such as this page), please let us know by using one of the following channels:
Join us on Slack and let us know what resources you need us to prirotizeSend us a Jira service desk requestLog an issues request with usWrite this page yourself!</description>
    </item>
    
    <item>
      <title>Content</title>
      <link>/hotelx/concepts/content/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/concepts/content/</guid>
      <description>const apiKeyJO = &#34;q8ggxpoVDW76Kw918hwnnRvxlZmAP2QZ&#34;;const apiKeyDC = &#34;64780338-49c8-4439-7c7d-d03c2033b145&#34;;$(document).ready(main);function main() {const q = &#39;[{\x22apikey\x22:\x2264780338-49c8-4439-7c7d-d03c2033b145\x22,\x22gist\x22:\x22https:\/\/gist.githubusercontent.com\/tgx-bot\/aeb082e484710ebf6b7a4ec5173064cc\/raw\x22,\x22divname\x22:\x22div_hotels\x22},{\x22apikey\x22:\x2264780338-49c8-4439-7c7d-d03c2033b145\x22,\x22gist\x22:\x22https:\/\/gist.githubusercontent.com\/tgx-bot\/4737228c495b09566474fa2db38fc72d\/raw\x22,\x22divname\x22:\x22div_destinations\x22},{\x22apikey\x22:\x2264780338-49c8-4439-7c7d-d03c2033b145\x22,\x22gist\x22:\x22https:\/\/gist.githubusercontent.com\/tgx-bot\/519b4223de8b44cb20c5c33212c62654\/raw\x22,\x22divname\x22:\x22div_boards\x22},{\x22apikey\x22:\x2264780338-49c8-4439-7c7d-d03c2033b145\x22,\x22gist\x22:\x22https:\/\/gist.githubusercontent.com\/tgx-bot\/0815561e9c25ce49bc416dbc73f36388\/raw\x22,\x22divname\x22:\x22div_rooms\x22},{\x22apikey\x22:\x2264780338-49c8-4439-7c7d-d03c2033b145\x22,\x22gist\x22:\x22https:\/\/gist.githubusercontent.com\/tgx-bot\/aa1be23b8c9229c8363c142036afb1f5\/raw\x22,\x22divname\x22:\x22div_categories\x22}]&#39;;const queries = JSON.parse(q);for (const q of queries) {iterateQueries(q)}}function iterateQueries(q) {if(!q.gist.includes(&#39;http&#39;)) return;$.get(q.gist, function (data) {q.data = data;renderGist(q);});}function renderGist(q) {var fetchURL = &#39;https://api.travelgatex.com&#39;;var search = window.location.search;var parameters = {};search.substr(1).split(&#39;&amp;&#39;).forEach(function (entry) {var eq = entry.indexOf(&#39;=&#39;);if (eq = 0) {parameters[decodeURIComponent(entry.</description>
    </item>
    
    <item>
      <title>GraphQL Schema breaking changes</title>
      <link>/hotelx/release-notes/breaking-changes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/release-notes/breaking-changes/</guid>
      <description>Changes history of deprecated notes previously announcedUnreleased  Removal of useContext from HotelSettingsInput. Reason: Redundant.. Deprecated on 2017-12-12.To be removed soon. Removal of connectUser from HotelSettingsInput. Reason: Redundant.. Deprecated on 2018-03-19.To be removed soon. Removal of distribute from AddOns. Reason: You can find it in distribution AddOn. Deprecated on 2018-05-21.To be removed soon.   2018-07-26  Removed useContext from HotelSettingsInput. Reason: Redundant.. Deprecated on 2017-12-12 . Removed connectUser from HotelSettingsInput.</description>
    </item>
    
    <item>
      <title>GraphQL Schema breaking changes</title>
      <link>/mappea/release-notes/breaking-changes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/mappea/release-notes/breaking-changes/</guid>
      <description>Changes history of deprecated notes previously announcedUnreleased  Removal of error from API. Reason: Sustituted by adviseMessage. Deprecated on 2018-08-22.To be removed soon. Removal of error from Member. Reason: Sustituted by adviseMessage. Deprecated on 2018-08-22.To be removed soon. Removal of error from Operation. Reason: Sustituted by adviseMessage. Deprecated on 2018-08-22.To be removed soon. Removal of error from Organization. Reason: Sustituted by adviseMessage. Deprecated on 2018-08-22.To be removed soon. Removal of error from Product.</description>
    </item>
    
    <item>
      <title>GraphQL Schema breaking changes</title>
      <link>/paymentx/release-notes/breaking-changes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/paymentx/release-notes/breaking-changes/</guid>
      <description>Changes history of deprecated notes previously announcedUnreleased  Removal of error from API. Reason: Sustituted by adviseMessage. Deprecated on 2018-08-22.To be removed soon. Removal of error from Member. Reason: Sustituted by adviseMessage. Deprecated on 2018-08-22.To be removed soon. Removal of error from Operation. Reason: Sustituted by adviseMessage. Deprecated on 2018-08-22.To be removed soon. Removal of error from Organization. Reason: Sustituted by adviseMessage. Deprecated on 2018-08-22.To be removed soon. Removal of error from Product.</description>
    </item>
    
    <item>
      <title>GraphQL Schema breaking changes</title>
      <link>/stats/release-notes/breaking-changes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/stats/release-notes/breaking-changes/</guid>
      <description> Changes history of deprecated notes previously announcedNo deletions to date </description>
    </item>
    
    <item>
      <title>GraphQL Schema breaking changes</title>
      <link>/travelgatex/release-notes/breaking-changes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/release-notes/breaking-changes/</guid>
      <description>Changes history of deprecated notes previously announcedUnreleased  Removal of error from Organization. Reason: Sustituted by adviseMessage. Deprecated on 2018-08-22.To be removed soon. Removal of useContext from HotelSettingsInput. Reason: Redundant.. Deprecated on 2017-12-12.To be removed soon. Removal of error from API. Reason: Sustituted by adviseMessage. Deprecated on 2018-08-22.To be removed soon. Removal of error from Member. Reason: Sustituted by adviseMessage. Deprecated on 2018-08-22.To be removed soon. Removal of error from Operation.</description>
    </item>
    
    <item>
      <title>Group</title>
      <link>/hotelx/plugins/format-files/group/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/format-files/group/</guid>
      <description>The hotel group file should be in the below format:
 Encoding: UTF-8  File Name: context_entity_group.csv  Context Entity (file will be indexed by this field). Format (indicates format file)  Extension file: csv Headers:  key → Entity. hotelCodes → hotel code chainCodes → chain code destinationCodes → destination code  Delimiter: Comma (“,”)  Directory: /F[folder code]\Maps/HotelX\Hotel/  Sample File Name: context_entity_group.csv
Data:
Hotel entity example</description>
    </item>
    
    <item>
      <title>Speed</title>
      <link>/travelgatex/release-notes/products-changelogs/changelog-speed/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/release-notes/products-changelogs/changelog-speed/</guid>
      <description>To make it easier for users and contributors to see precisely what notable changes have been made on the product.
Product Page Link
All notable changes to this product will be documented in this page.Under construction!We have logged this resource on our roadmap and we are currently working through extending all of the resources in our documentation. If you need specific resources (such as this page), please let us know by using one of the following channels:</description>
    </item>
    
    <item>
      <title>Tools</title>
      <link>/learning-graphql/tools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/learning-graphql/tools/</guid>
      <description>Top tools to develop in GraphQL Here is a collection of tools we&amp;rsquo;ve been using that have help us develop in GraphQL:
Schemas Design  APIs Guru&amp;rsquo;s graphql-faker  Go Packages Nowadays most our APIS are written in Go, mainly because of speed, ability to handle very high load while using low resources. Also because of the ability to develop plugins. We&amp;rsquo;ve used many libraries and packages to help us, hereby our list:</description>
    </item>
    
    <item>
      <title>Booking List</title>
      <link>/hotelx/howtos/bookingflow/booklist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/howtos/bookingflow/booklist/</guid>
      <description>The Booking operation allows to retrieve a booking (or bookings) with all its details from the booking reference locator. The most important information returned for each booking in the list is: - Booking reference - Booking holder - Booking pax - Hotel, rooms and boards confirmed - Booking rates
Advanced criteria Explain different parameters can be set up on the request (indicate which ones are mandatory)
How to request a5b25332a7a5683d602efeb87233a9c7 You can ask for bookings by client reference (XTG-XXXXXX) or by supplier reference.</description>
    </item>
    
    <item>
      <title>Commission</title>
      <link>/hotelx/plugins/format-files/commission/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/format-files/commission/</guid>
      <description>The commission file should be in the below format:
 Encoding: UTF-8 File Name:  context sequential commission  Extension file: csv Headers:
 ruleId → rule identifier supplierCodes → supplier code notSupplierCodes → supplier code creationDateFrom → start creation date Date format creationDateTo → end creation date Date format checkInFrom → checkin date Date format checkInTo → checkout date Date format hotelCodes → hotel code nothotelCodes → hotel code chainsCodes → chain code notChainCodes → chain code destinationCodes → destination code notDestinationCodes → destination code percentage → commission value, decimal separator must be point (&amp;ldquo;.</description>
    </item>
    
    <item>
      <title>Development</title>
      <link>/hotelx/plugins/development/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/development/</guid>
      <description>On this page you will learn how to develop your own HotelX Plugin.</description>
    </item>
    
    <item>
      <title>Entity Table values</title>
      <link>/hotelx/plugins/format-files/entity_table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/format-files/entity_table/</guid>
      <description>We have different combinations values from entities values this table show this combinations:
   entity chainCodes destinationCodes hotelCodes     chain Yes No No   hotel No No Yes   destination No Yes No    </description>
    </item>
    
    <item>
      <title>Insights</title>
      <link>/travelgatex/release-notes/products-changelogs/changelog-insights/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/release-notes/products-changelogs/changelog-insights/</guid>
      <description>To make it easier for users and contributors to see precisely what notable changes have been made on the product.
Product Page Link
All notable changes to this product will be documented in this page.Under construction!We have logged this resource on our roadmap and we are currently working through extending all of the resources in our documentation. If you need specific resources (such as this page), please let us know by using one of the following channels:</description>
    </item>
    
    <item>
      <title>Ranking</title>
      <link>/hotelx/concepts/ranking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/concepts/ranking/</guid>
      <description>On this page you will learn how to rank hotels.
Overview On this page, you will learn how to manage content data such as hotels, boards, categories, etc. in your site. Hotel Content operations allow changes to be made into static methods on HotelX, so that hotels can be divided into different rankings or priorities in order to facilitate the mapping process.
The main goal of this process is to create a hotel ranking and divide the whole portfolio in order to make the hotel list more manageable.</description>
    </item>
    
    <item>
      <title>Safety margin</title>
      <link>/hotelx/plugins/format-files/safety_margin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/format-files/safety_margin/</guid>
      <description>The safety margin file should be in the below format:
 Encoding: UTF-8 File Name:  context sequential safetymargin  Extension file: csv Headers:
 ruleId → rule identifier clientTokens → client Tokens* supplierCodes → supplier code notSupplierCodes → supplier code creationDateFrom → start creation date Date format creationDateTo → end creation date Date format checkInFrom → checkinfrom date Date format checkInTo → checkinto date Date format hotelCodes → hotel code nothotelCodes → hotel code chainsCodes → chain code notChainCodes → chain code destinationCodes → destination code notDestinationCodes → destination code percentage → commission value, decimal separator must be point (&amp;ldquo;.</description>
    </item>
    
    <item>
      <title>Tutorials &amp; Resources</title>
      <link>/learning-graphql/tutorials_resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/learning-graphql/tutorials_resources/</guid>
      <description>Although GraphQL is a very young technology, it&amp;rsquo;s quickly gaining momentum and already has a fast growing yet vast ecosystem. Apart from Facebook&amp;rsquo;s and Graphql.org&amp;rsquo;s official documentation, there are more and more development teams embracing this technology and you can now find a lot of articles, tutorial and videos talking about it.
We want to be part of this community and hopefully help you discover this new technology and its features.</description>
    </item>
    
    <item>
      <title>Cancellation</title>
      <link>/hotelx/howtos/bookingflow/cancellation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/howtos/bookingflow/cancellation/</guid>
      <description>const apiKeyJO = &#34;q8ggxpoVDW76Kw918hwnnRvxlZmAP2QZ&#34;;const apiKeyDC = &#34;64780338-49c8-4439-7c7d-d03c2033b145&#34;;$(document).ready(main);function main() {const q = &#39;[{\x22apikey\x22:\x2264780338-49c8-4439-7c7d-d03c2033b145\x22,\x22gist\x22:\x22https:\/\/gist.githubusercontent.com\/tgx-bot\/1b160cfcf47b1c4d1deada1a18ae98b6\/raw\x22,\x22divname\x22:\x22div_cancellation\x22}]&#39;;const queries = JSON.parse(q);for (const q of queries) {iterateQueries(q)}}function iterateQueries(q) {if(!q.gist.includes(&#39;http&#39;)) return;$.get(q.gist, function (data) {q.data = data;renderGist(q);});}function renderGist(q) {var fetchURL = &#39;https://api.travelgatex.com&#39;;var search = window.location.search;var parameters = {};search.substr(1).split(&#39;&amp;&#39;).forEach(function (entry) {var eq = entry.indexOf(&#39;=&#39;);if (eq = 0) {parameters[decodeURIComponent(entry.</description>
    </item>
    
    <item>
      <title>Distribution</title>
      <link>/travelgatex/release-notes/products-changelogs/changelog-distribution/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/release-notes/products-changelogs/changelog-distribution/</guid>
      <description>To make it easier for users and contributors to see precisely what notable changes have been made on the product.
Product Page Link
All notable changes to this product will be documented in this page.Under construction!We have logged this resource on our roadmap and we are currently working through extending all of the resources in our documentation. If you need specific resources (such as this page), please let us know by using one of the following channels:</description>
    </item>
    
    <item>
      <title>Entities</title>
      <link>/hotelx/plugins/entity_table_file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/entity_table_file/</guid>
      <description>Entities processed types: Sequential Type of processing sequentially, the first rule that coincides will be the one applied.
Supplier Rules applied or indexed at the supplier level.
Access Rules applied or indexed at the access level.
Hotel The key to indexing is of the hotel type, we hope that the reference is by a hotel code where the type will be given by the context.
Destination Idem hotel.</description>
    </item>
    
    <item>
      <title>FAQs</title>
      <link>/travelgatex/frequently-asked-questions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/frequently-asked-questions/</guid>
      <description>What is TravelgateX? TravelgateX platform provides a single API endpoint for all of our API products. This makes it easy for you to integrate our full travel catalog and services into your applications (regardless of whether you are integrating to a website, mobile app, widget, or other interface). Instead of having to deal with REST APIs, you&amp;rsquo;ll be able to use full poser of GraphQL to interact with your data.</description>
    </item>
    
    <item>
      <title>Supplier Order</title>
      <link>/hotelx/plugins/format-files/supplier_order/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/format-files/supplier_order/</guid>
      <description>The supplier order file should be in the below format:
 Encoding: UTF-8 File Name:  supplier_order  Extension file: csv Headers:
 ruleId → rule identifier supplierCodes → supplier code  List file fields
|Field | Mandatory | Excluded fileds* | Multi-value | |---|---|---|---| |ruleId| Yes | - | No | |supplierCodes| Yes | - | Yes |  Delimiter: Comma (“,”)
 Separator for multiples codes in the same row: Semicolon (&amp;ldquo;;&amp;rdquo;)</description>
    </item>
    
    <item>
      <title>Useful information</title>
      <link>/hotelx/howtos/howto-book/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/howtos/howto-book/</guid>
      <description>HotelX Settings In HotelX there are different configuration level settings for a request. With these settings, you can configure some aspect of the request:
   Field Description     context It indicates the context codes that you want to send and to receive.   Timeout It sets the requested timeout in the different query and mutation types:* search * quote * book (includes cancel and booking)    Language The language you want to use in the request.</description>
    </item>
    
    <item>
      <title>Net compare</title>
      <link>/hotelx/plugins/format-files/netcompare/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/format-files/netcompare/</guid>
      <description>The net compare file should be in the format below:
 Encoding: UTF-8 File Name:  context sequential netCompare  Extension file: csv Headers:
 ruleId → rule identifier clientTokens → client Tokens* supplierCodes → supplier code notSupplierCodes → supplier code bookingDateFrom → booking date from Date format bookingDateTo → booking date to Date format startDateFrom → start date from Date format startDateTo → start date to Date format hotelCodes → hotel code nothotelCodes → hotel code chainsCodes → chain code notChainCodes → chain code destinationCodes → destination code notDestinationCodes → destination code percentage → commission value, decimal separator must be point (&amp;ldquo;.</description>
    </item>
    
    <item>
      <title>Stats</title>
      <link>/travelgatex/release-notes/products-changelogs/changelog-stats/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/release-notes/products-changelogs/changelog-stats/</guid>
      <description>To make it easier for users and contributors to see precisely what notable changes have been made on the product.
Product Page Link
All notable changes to this product will be documented in this page.Under construction!We have logged this resource on our roadmap and we are currently working through extending all of the resources in our documentation. If you need specific resources (such as this page), please let us know by using one of the following channels:</description>
    </item>
    
    <item>
      <title>Preference</title>
      <link>/hotelx/plugins/format-files/preference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/format-files/preference/</guid>
      <description>The preference file should be in the below format:
 Encoding: UTF-8 File Name:  context sequential preference  Extension file: csv Headers:
 ruleId → rule identifier clientTokens → client Tokens* supplierCodes → supplier code notSupplierCodes → supplier code bookingDateFrom → booking date from Date format bookingDateTo → booking date to Date format startDateFrom → start date from Date format startDateTo → start date to Date format hotelCodes → hotel code nothotelCodes → hotel code chainsCodes → chain code notChainCodes → chain code destinationCodes → destination code notDestinationCodes → destination code percentage → commission value, decimal separator must be point (&amp;ldquo;.</description>
    </item>
    
    <item>
      <title>travelgatex.com</title>
      <link>/travelgatex/release-notes/products-changelogs/changelog-web/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/release-notes/products-changelogs/changelog-web/</guid>
      <description>To make it easier for users and contributors to see precisely what notable changes have been made on the web.
Web site Link
All notable changes to this product will be documented in this page.2018-10-09  Added press module with releases, asses, medias, newsletter, blog and contact. Added the possiblity to add apis to a team. Added second functional version of stats.    Changed the query to obtain team permissions.</description>
    </item>
    
    <item>
      <title>footer</title>
      <link>/_footer/</link>
      <pubDate>Mon, 24 Apr 2017 18:36:24 +0200</pubDate>
      
      <guid>/_footer/</guid>
      <description>Lorem ipsum dolor sit amet.</description>
    </item>
    
    <item>
      <title>header</title>
      <link>/_header/</link>
      <pubDate>Mon, 24 Apr 2017 18:36:24 +0200</pubDate>
      
      <guid>/_header/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>/guion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/guion/</guid>
      <description>Getting Started pagetitle = &amp;ldquo;&amp;rdquo; GOAL: información basica para empezar a desarrollar
Overview GOAL: Explicar el who, why, how de la plataforma
 WHO: Equipos tecnicos para consumir servicios de travel
 WHY: search &amp;amp; book travel multi-products &amp;amp; multi-source
 WHY: Using the Storefront API, you can:
 HOW: Plataforma: Multi-Producto &amp;amp; Multi-Source
 HOW: Diagrama Platforma
 HOW: Utilización de GraphQL: EndPoint único
 WHY: Fast. Scalable. Reliable.</description>
    </item>
    
    <item>
      <title>Credits</title>
      <link>/credits/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/credits/</guid>
      <description>github contributors Other contributors  @bep supports and advices   Packages and libraries  Bootstrap - front-end framework mermaid - generation of diagram and flowchart from text in a similar manner as markdown font awesome - the iconic font and CSS framework jQuery - The Write Less, Do More, JavaScript Library lunr - Lunr enables you to provide a great search experience without the need for external, server-side, search services&amp;hellip; JavaScript-autoComplete - An extremely lightweight and powerful vanilla JavaScript completion suggester.</description>
    </item>
    
  </channel>
</rss>